[general]
mode = "async"
history_size = 30

[contexts.documentation]
help = "Commands regarding code documentation."
aliases = [
    "docs",
]

[contexts.fast]
help = "Run short-time commands. Good for smoke tests"

[contexts.format]
help = "Reformating commands, with in-file replacements."
aliases = [
    "fmt",
]

[contexts.strict]
help = "Strict checks, for ones who never compromise!"
allowed_by_default = true

[contexts.test]
help = "Checks for test files."

[commands.autoflake]
help = "Remove unused imports and variables"
args = [
    "--in-place",
    "--recursive",
    "--expand-star-imports",
    "--remove-all-unused-imports",
]
required_contexts = [
    "format",
]
allowed_contexts = [
    "fast",
    "test",
]
version = "1.4"

[commands.bandit]
help = "Python security checks tool."
args = [
    "-r",
    "--skip=B603",
]
version = "1.7.4"

[commands.black]
help = "Code formatter for python."
args = [
    "--check",
]
allowed_contexts = [
    "fast",
    "test",
]
version = "22.6.0"

[commands.black.format]
clear_args = true

[commands.darglint]
help = "Tool for documentation coverage."
args = [
    "--docstring-style=sphinx",
]
allowed_contexts = [
    "documentation",
]
version = "1.8.1"

[commands.flake8]
help = "Code style checker for python."
args = [
    "--max-line-length=88",
    "--ignore=E203,W503,DAR",
]
allowed_contexts = [
    "fast",
    "test",
]
version = "5.0.4"

[commands.isort]
help = "Tool for sorting and cleaning python imports."
args = [
    "--profile=black",
    "--check-only",
]
allowed_contexts = [
    "fast",
    "test",
]
version = "5.10.1"

[commands.isort.format]
args = [
    "--profile=black",
]

[commands.mypy]
help = "Validate types using mypy."
args = [
    "--ignore-missing-imports",
]
allowed_contexts = [
    "test",
]
version = "0.971"

[commands.mypy.strict]
add_args = [
    "--strict",
]

[commands.pydocstyle]
help = "Tool for python docstring style enforcing"
args = [
    "--ignore=D203,D212,D400,D401",
]
allowed_contexts = [
    "documentation",
]
version = "6.1.1"

[commands.pylint]
help = "Python code linter"
args = [
    "--ignore-imports=y",
    "--load-plugins=pylint.extensions.docparams",
    "--enable=useless-suppression,use-symbolic-message-instead",
    "--fail-on=useless-suppression,use-symbolic-message-instead",
]
version = "2.14.5"

[commands.pylint.documentation]
args = [
    "--ignore-imports=y",
    "--load-plugins=pylint.extensions.docparams",
    "--disable=all",
    "--enable=C0115,C0304,C0116,C0114",
    "--enable=W9005,W9006,W9008,W9010,W9011,W9012,W9013",
    "--enable=W9014,W9015,W9016,W9017,W9018,W9019,W9020,W9021",
]

[commands.pylint.test]
add_args = [
    "--disable=C0103,C0114,C0115,C0116,C0203,C0204,C0411",
    "--disable=E0401,E0611,E1101,E1120,E1130,E1139",
    "--disable=R0801,R0902,R0903,R0904,R0913",
    "--disable=W0201,W0613,W0621",
]

[sources."docs/conf.py"]
contexts = [
    "fast",
]

[sources."src/eddington_gui"]
deny_list = ["darglint"]